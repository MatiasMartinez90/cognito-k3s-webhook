apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app.name }}
    component: main
    helm.sh/chart: {{ include "cognito-webhook.chart" . }}
    app.kubernetes.io/name: {{ include "cognito-webhook.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
      component: main
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
        component: main
    spec:
      imagePullSecrets:
      - name: {{ .Values.app.name }}-registry-secret
      containers:
      - name: webhook
        image: {{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.app.port }}
          name: http
        envFrom:
        - configMapRef:
            name: {{ .Values.app.name }}-config
        - secretRef:
            name: {{ .Values.app.name }}-secret
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.app.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.app.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- toYaml .Values.deployment.resources | nindent 10 }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL