name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: registry.cloud-it.com.ar
  IMAGE_NAME: cognito-k3s-webhook

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Private Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: admin
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  update-manifests:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update image tag in manifests
      run: |
        # Extract the latest tag
        IMAGE_TAG=$(echo "${{ needs.build-and-push.outputs.image-tag }}" | grep "latest" | head -1)
        
        # Update deployment manifest
        sed -i "s|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:.*|image: ${IMAGE_TAG}|g" k8s/04-deployment.yaml
        
        echo "Updated image to: ${IMAGE_TAG}"
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add k8s/04-deployment.yaml
          git commit -m "ðŸ¤– Update image tag to latest build
          
          Image: ${{ needs.build-and-push.outputs.image-tag }}
          Digest: ${{ needs.build-and-push.outputs.image-digest }}
          
          ðŸš€ Generated with GitHub Actions"
          git push
        fi

  notify-argocd:
    needs: [build-and-push, update-manifests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Trigger ArgoCD Sync
      run: |
        echo "âœ… Pipeline completed successfully!"
        echo "ðŸ“¦ Image built: ${{ needs.build-and-push.outputs.image-tag }}"
        echo "ðŸ”„ ArgoCD will automatically sync the changes"
        echo "ðŸŽ¯ Monitor deployment in ArgoCD dashboard"